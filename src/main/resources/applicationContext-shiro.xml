<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
		
		
		<!-- 自定义的Realm -->
		<bean id="userRealm" class="com.myjava.realm.UserRealm">
			<property name="credentialsMatcher" ref="credentialsMatcher"></property>
		</bean>
		<!-- 安全管理器 -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="userRealm"/>
			<property name="sessionManager" ref="defaultWebSessionManager"/>
			<property name="rememberMeManager" ref="remembermeManager"/>
		</bean>
		<!-- 密码匹配器 -->
		<bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
			<!-- 指定加密算法，此处是MD5 -->
			<property name="hashAlgorithmName" value="md5"/>
			<property name="hashIterations" value="2"></property>
		</bean>
		
		<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->  
		<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">  
			<property name="staticMethod"   
				value="org.apache.shiro.SecurityUtils.setSecurityManager"/>  
			<property name="arguments" ref="securityManager"/>  
		</bean>  
		<!-- Shiro生命周期处理器-->  
		<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>  
		
		
		
		<!-- shiro filter 配置 -->
		<!-- 基于表单的过滤器 -->
		<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
			<!-- 此loginUrl表示登录请求的url，即登录表单的action地址 -->
			<property name="loginUrl" value="/login/index.action"></property>
			<!-- 登录验证成功会跳转到这个请求地址 -->
			<property name="successUrl" value="/login/index.action"/> 
			<property name="rememberMeParam" value="rememberMe"/>
		</bean>
		<!-- 将登录成功的用户信息存入shiro session -->
		<bean id="userSessionFilter" class="com.myjava.filter.UserSessionFilter"></bean>
		
		<!-- 限制只有用户经过认证才可以访问的filter -->
		<bean id="myAuthenticationFilter" class="com.myjava.filter.MyAuthenticationFilter"></bean>
		
		<!-- shiro filter -->
		<bean id="shiro-filter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager"/>
			<!-- 表示未登录跳转的登录页面地址 -->
			<property name="loginUrl" value="/login/toLogin.action"></property>
			<property name="filters">
				<util:map>
					<entry key="authc" value-ref="formAuthenticationFilter"></entry>
					<entry key="userSession" value-ref="userSessionFilter"></entry>
					<entry key="myauthc" value-ref="myAuthenticationFilter"></entry>
				</util:map>
			</property>
			<property name="filterChainDefinitions">
				<value>
					<!-- userSession会拦截如下请求，登录完成后将用户信息存入shiro session -->
					/login/index.action = authc,userSession
					<!-- anon表示登录请求不需要认证 -->
					/login/toLogin.action = anon
					/login/toRegister.action = anon
					/login/register.action = anon
					<!-- 表示权限模块需要认证才能访问(RememberMe功能登录的无用)-->
					/perm/** = myauthc
					<!-- rememberMe及Authenticated都可以访问 -->
					/** = user
				</value>
			</property>
		</bean>
		
		<!-- rememberme功能配置 -->
		
		<!-- rememberme 管理器 -->
		<bean id="remembermeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
			<property name="cookie" ref="rememberMeCookie"></property>
		</bean>
		
		<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
		    <constructor-arg value="rememberMe"/>  
		    <property name="httpOnly" value="true"/>  
		    <property name="maxAge" value="2592000"/><!-- 30天 -->  
		</bean>
		
		
		<!-- shiro session 会话管理 -->
		
		<!-- 默认的会话管理器，适用于web环境 -->
		<bean id="defaultWebSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
			<property name="sessionIdCookie" ref="sessionIdCookie"/>
			<!-- 全局的session过期时间，默认为30分钟即180000毫秒 -->
			<property name="globalSessionTimeout" value="60000"/>
			<property name="sessionIdCookieEnabled" value="true"/>
			<!--  
			<property name="sessionListeners">
				<set>
					<bean class="com.myjava.listener.MySessionListener"/>
				</set>
			</property>
			-->
		</bean>
		<!-- 会话Cookie模板  --> 
		<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		    <constructor-arg value="sid"/>  
		    <!-- most of the cookies ever used by Shiro should be as secure as possible. -->
		    <property name="httpOnly" value="true"/>  
		    <!-- -1 表示关闭浏览器时cookie失效 -->
		    <property name="maxAge" value="-1"/>  
		</bean>  
		
</beans>